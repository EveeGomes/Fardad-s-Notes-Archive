  Binary operators:
  A @ B       operator@

  no side effect
  A + B       operator+

  with side effect
  A += B      operator+=

  int a[5], b[6];

  a + b  this overload is not possible becaue (int*) + (int*) is defined already
  Unary operators:
  @A     operator@


  B++    operator++(int)
  B--    operator--(int)


  Object A;
  prem   b;

  A @ b  1- A has a method called 
            operator@ that receives 
            b as an argument
         2- operator@ is a standalone 
            function accepting two args; 
            A and b

AnyType X;
Object1 A;  // we don't have access to
object2 B;

X = A @ B

X = operator@(A, B);

Anytype? operator@(const Object1? a, const Object2? b);

A + B + C + D + E